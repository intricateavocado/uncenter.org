---
import { type CollectionEntry, getCollection } from 'astro:content';
import Page from '@/layouts/Page.astro';

type Props = CollectionEntry<'posts'>;

import { slugify } from '@/utils';

import ArrowLeft from '~icons/lucide/arrow-left';
import ArrowRight from '~icons/lucide/arrow-right';

const previous: any = null;
const next: any = null;

export async function getStaticPaths() {
	const posts = await getCollection('posts');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

const post = Astro.props;
const { Content } = await post.render();
---

<Page post={true}>
	<article>
		<h1 style={`view-transition-name: post-${slugify(post.data.title)}`}>
			{post.data.title}
		</h1>
		<div class="flex flex-row flex-wrap gap-2 lowercase -mt-10 mb-10">
			{
				post.data.date && (
					<time datetime={post.data.date.toISOString()}>
						{post.data.date.toDateString()}
					</time>
				)
			}
			{
				post.data.tags && (
					<>
						<span>&middot;</span>
						<div class="flex flex-row flex-wrap space-x-1">
							{post.data.tags.map((tag: any, index: number) => (
								<span>
									<a href={`/tags/${slugify(tag)}`}>{tag}</a>
									{index !== post.data.tags.length - 1 && ','}
								</span>
							))}
						</div>
					</>
				)
			}
		</div>
		<Content />
	</article>
	{post.data.comments && <div id="comments" class="mt-16" />}
	{
		(
			<div class="flex flex-row justify-between mt-8">
				{previous && (
					<a
						class="text-center space-x-2"
						href={previous.url}
						aria-label="Read previous post"
					>
						<ArrowLeft />
						<span>{previous.data.title}</span>
					</a>
				)}
				{!previous && next && <div />}
				{next && (
					<a
						class="text-center space-x-2"
						href={next.url}
						aria-label="Read next post"
					>
						<span>{next.data.title}</span>
						<ArrowRight />
					</a>
				)}
			</div>
		)
	}
</Page>
